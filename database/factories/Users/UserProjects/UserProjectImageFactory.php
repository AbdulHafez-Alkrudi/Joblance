<?php

namespace Database\Factories\Users\UserProjects;

use App\Models\Users\UserProjects\UserProject;
use Illuminate\Database\Eloquent\Factories\Factory;
use Illuminate\Support\Facades\Storage;

/**
 * @extends Factory
 */
class UserProjectImageFactory extends Factory
{
    /**
     * Define the model's default state.
     *
     * @return array<string, mixed>
     * @throws \Exception
     */
    public function definition(): array
    {
        // Generate a temporary image using Faker
        $image = $this->faker->image();

        // Check if the image file exists and is readable
        if ($image && file_exists($image) && is_readable($image)) {
            // Define the storage path
            $path = 'project_images/' . basename($image);

            // Store the file in the public disk
            Storage::disk('public')->put($path, file_get_contents($image));

            // Clean up the temporary file generated by Faker
            @unlink($image);

            return [
                'project_id' => UserProject::factory(),
                'image_path' => $path
            ];
        } else {
            // Handle the error case where the image was not generated correctly
            throw new \Exception('Failed to generate image using Faker');
        }
    }
}
